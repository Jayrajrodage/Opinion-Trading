// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User{
  id            String   @id @default(uuid())
  email         String   @unique
  username      String?   @unique
  depositBalance     Float    @default(0)
  winningsBalance    Float    @default(0)
  promotionalBalance Float    @default(50) 
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  orders     Order[]
  trades     Trade[] 
}


model Event {
  id          String        @id @default(uuid())
  title       String
  description String?
  status      EventStatus   @default(OPEN)
  expiresAt   DateTime     
  traders     Int 
  volume      Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  orders     Order[]    
}

model Order {
  id              String       @id @default(uuid())
  eventId         String
  userId          String
  tradeId         String
  side            OrderSide
  orderType       OrderType
  quantity        Int
  price           Float       
  matchedQuantity Int          @default(0)
  status          OrderStatus  @default(OPEN)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  event           Event        @relation(fields: [eventId], references: [id])
  user            User         @relation(fields: [userId], references: [id])
  trade           Trade         @relation(fields: [tradeId], references: [id])
}

model Trade {
  id              String     @id @default(uuid())
  userId          String
  invested        Float      
  returns         Float?    
  quantity        Int
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  user            User       @relation(fields: [userId], references: [id])
  orders          Order[] 
}


enum OrderSide {
  YES
  NO
}

enum OrderType {
  MARKET
  LIMIT
}

enum OrderStatus {
  OPEN
  PARTIAL
  FILLED
  CANCELLED
}


enum EventStatus {
  OPEN       
  CLOSED     
  RESOLVED   
}
